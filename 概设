主控程序基本流程：

功能：
初始化:format()
多用户:User_list()
多级目录:
创建目录:dir_mk()
改变目录:dir_ch()
删除目录：dir_rm()
列出文件目录:dir_ls()
转换路径：path_ch()
系统初始化:format()
文件的创建:f_create()
文件的打开:f_open()
文件的读写:f_read(),f_write() ...ps:打开文件和读写操作重复？？
文件的关闭:f_close()
删除文件:f_remove()
用户登录:user_login()
退出:user_logout()

大致思路：单用户...ps:多用户？
先用malloc()分配模拟空间，获取操作系统系统指针
[加载磁盘文件]进行初始化
循环指令操作：
    	格式化——format：调用format() 
				通过memset()函数进行初始化
				通过fwrite()函数进行磁盘加载
	创建目录——mkdir：调用dir_mk()
				判断是否重命名——strcmp()
				寻找当前路径空目录项
				寻找空白盘快号
				分配并初始化
				修改FAT表
	删除目录——rmdir：调用dir_rm（）
				判断当前路径下是否存在该目录 strcmp()
				FAT清空
				格式化子目录
				回收子目录占据目录项
	显示目录——ls: 调用dir_ls() 
				找到当前路径指针for循环遍历就可以了
	路径转换——cd：调用path_ch()
				.. ——> 修改当前指针到根指针
				for循环查找文件，找到修改当前指针，否则报错
	创建文件——create：调用f_create()
				大致和创建目录一样
	写文件——write：调用f_wtite()
			        ？？？？（考虑内容结束指针endpoint)
	读文件——read：调用f_read()
				？？？？（考虑内容结束指针endpoint)
	删除文件——rm: 调用f_remove()
				大致和删除目录差不多，对文件内容地址要格式化
	打开文件——rm: 调用f_open()
				？？？？..ps 不理解文件打开和关闭的意义
	关闭文件——close: 调用f_close()
				？？？？
	退出系统——exit:  调用exit()...ps:保存工作？
				写回磁盘
				释放内存虚拟磁盘
				该释放的都释放了

数据结构：
	define 常量：
	type   全局变量：
	struct 结构体：FCB
	*point 指针：

